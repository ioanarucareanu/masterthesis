<?php
interface IPrinter
{
	public function pprint(PHPParser_Node $node);
	public function pprintArg(PHPParser_Node_Arg $node);
	public function pprintConst(PHPParser_Node_Const $node);
	public function pprintArrayExpr(PHPParser_Node_Expr_Array $node);
	public function pprintArrayDimFetchExpr(PHPParser_Node_Expr_ArrayDimFetch $node);
	public function pprintArrayItemExpr(PHPParser_Node_Expr_ArrayItem $node);
	public function pprintAssignExpr(PHPParser_Node_Expr_Assign $node);
	public function pprintAssignBitwiseAndExpr(PHPParser_Node_Expr_AssignBitwiseAnd $node);
	public function pprintAssignBitwiseOrExpr(PHPParser_Node_Expr_AssignBitwiseOr $node);
	public function pprintAssignBitwiseXorExpr(PHPParser_Node_Expr_AssignBitwiseXor $node);
	public function pprintAssignConcatExpr(PHPParser_Node_Expr_AssignConcat $node);
	public function pprintAssignDivExpr(PHPParser_Node_Expr_AssignDiv $node);
	public function pprintAssignMinusExpr(PHPParser_Node_Expr_AssignMinus $node);
	public function pprintAssignModExpr(PHPParser_Node_Expr_AssignMod $node);
	public function pprintAssignMulExpr(PHPParser_Node_Expr_AssignMul $node);
	public function pprintAssignPlusExpr(PHPParser_Node_Expr_AssignPlus $node);
	public function pprintAssignRefExpr(PHPParser_Node_Expr_AssignRef $node);
	public function pprintAssignShiftLeftExpr(PHPParser_Node_Expr_AssignShiftLeft $node);
	public function pprintAssignShiftRightExpr(PHPParser_Node_Expr_AssignShiftRight $node);
	public function pprintBitwiseAndExpr(PHPParser_Node_Expr_BitwiseAnd $node);
	public function pprintBitwiseNotExpr(PHPParser_Node_Expr_BitwiseNot $node);
	public function pprintBitwiseOrExpr(PHPParser_Node_Expr_BitwiseOr $node);
	public function pprintBitwiseXorExpr(PHPParser_Node_Expr_BitwiseXor $node);
	public function pprintBooleanAndExpr(PHPParser_Node_Expr_BooleanAnd $node);
	public function pprintBooleanNotExpr(PHPParser_Node_Expr_BooleanNot $node);
	public function pprintBooleanOrExpr(PHPParser_Node_Expr_BooleanOr $node);
	public function pprintArrayCastExpr(PHPParser_Node_Expr_Cast_Array $node);
	public function pprintBoolCastExpr(PHPParser_Node_Expr_Cast_Bool $node);
	public function pprintDoubleCastExpr(PHPParser_Node_Expr_Cast_Double $node);
	public function pprintIntCastExpr(PHPParser_Node_Expr_Cast_Int $node);
	public function pprintObjectCastExpr(PHPParser_Node_Expr_Cast_Object $node);
	public function pprintStringCastExpr(PHPParser_Node_Expr_Cast_String $node);
	public function pprintUnsetCastExpr(PHPParser_Node_Expr_Cast_Unset $node);
	public function pprintCastExpr(PHPParser_Node_Expr_Cast $node);
	public function pprintClassConstFetchExpr(PHPParser_Node_Expr_ClassConstFetch $node);
	public function pprintCloneExpr(PHPParser_Node_Expr_Clone $node);
	public function pprintClosureExpr(PHPParser_Node_Expr_Closure $node);
	public function pprintClosureUseExpr(PHPParser_Node_Expr_ClosureUse $node);
	public function pprintConcatExpr(PHPParser_Node_Expr_Concat $node);
	public function pprintConstFetchExpr(PHPParser_Node_Expr_ConstFetch $node);
	public function pprintDivExpr(PHPParser_Node_Expr_Div $node);
	public function pprintEmptyExpr(PHPParser_Node_Expr_Empty $node);
	public function pprintEqualExpr(PHPParser_Node_Expr_Equal $node);
	public function pprintErrorSuppressExpr(PHPParser_Node_Expr_ErrorSuppress $node);
	public function pprintEvalExpr(PHPParser_Node_Expr_Eval $node);
	public function pprintExitExpr(PHPParser_Node_Expr_Exit $node);
	public function pprintFuncCallExpr(PHPParser_Node_Expr_FuncCall $node);
	public function pprintGreaterExpr(PHPParser_Node_Expr_Greater $node);
	public function pprintGreaterOrEqualExpr(PHPParser_Node_Expr_GreaterOrEqual $node);
	public function pprintIdenticalExpr(PHPParser_Node_Expr_Identical $node);
	public function pprintIncludeExpr(PHPParser_Node_Expr_Include $node);
	public function pprintInstanceofExpr(PHPParser_Node_Expr_Instanceof $node);
	public function pprintIssetExpr(PHPParser_Node_Expr_Isset $node);
	public function pprintListExpr(PHPParser_Node_Expr_List $node);
	public function pprintLogicalAndExpr(PHPParser_Node_Expr_LogicalAnd $node);
	public function pprintLogicalOrExpr(PHPParser_Node_Expr_LogicalOr $node);
	public function pprintLogicalXorExpr(PHPParser_Node_Expr_LogicalXor $node);
	public function pprintMethodCallExpr(PHPParser_Node_Expr_MethodCall $node);
	public function pprintMinusExpr(PHPParser_Node_Expr_Minus $node);
	public function pprintModExpr(PHPParser_Node_Expr_Mod $node);
	public function pprintMulExpr(PHPParser_Node_Expr_Mul $node);
	public function pprintNewExpr(PHPParser_Node_Expr_New $node);
	public function pprintNotEqualExpr(PHPParser_Node_Expr_NotEqual $node);
	public function pprintNotIdenticalExpr(PHPParser_Node_Expr_NotIdentical $node);
	public function pprintPlusExpr(PHPParser_Node_Expr_Plus $node);
	public function pprintPostDecExpr(PHPParser_Node_Expr_PostDec $node);
	public function pprintPostIncExpr(PHPParser_Node_Expr_PostInc $node);
	public function pprintPreDecExpr(PHPParser_Node_Expr_PreDec $node);
	public function pprintPreIncExpr(PHPParser_Node_Expr_PreInc $node);
	public function pprintPrintExpr(PHPParser_Node_Expr_Print $node);
	public function pprintPropertyFetchExpr(PHPParser_Node_Expr_PropertyFetch $node);
	public function pprintShellExecExpr(PHPParser_Node_Expr_ShellExec $node);
	public function pprintShiftLeftExpr(PHPParser_Node_Expr_ShiftLeft $node);
	public function pprintShiftRightExpr(PHPParser_Node_Expr_ShiftRight $node);
	public function pprintSmallerExpr(PHPParser_Node_Expr_Smaller $node);
	public function pprintSmallerOrEqualExpr(PHPParser_Node_Expr_SmallerOrEqual $node);
	public function pprintStaticCallExpr(PHPParser_Node_Expr_StaticCall $node);
	public function pprintStaticPropertyFetchExpr(PHPParser_Node_Expr_StaticPropertyFetch $node);
	public function pprintTernaryExpr(PHPParser_Node_Expr_Ternary $node);
	public function pprintUnaryMinusExpr(PHPParser_Node_Expr_UnaryMinus $node);
	public function pprintUnaryPlusExpr(PHPParser_Node_Expr_UnaryPlus $node);
	public function pprintVariableExpr(PHPParser_Node_Expr_Variable $node);
	public function pprintYieldExpr(PHPParser_Node_Expr_Yield $node);
	public function pprintFullyQualifiedName(PHPParser_Node_Name_FullyQualified $node);
	public function pprintRelativeName(PHPParser_Node_Name_Relative $node);
	public function pprintName(PHPParser_Node_Name $node);
	public function pprintParam(PHPParser_Node_Param $node);
	public function pprintClassConstScalar(PHPParser_Node_Scalar_ClassConst $node);
	public function pprintDirConstScalar(PHPParser_Node_Scalar_DirConst $node);
	public function pprintDNumberScalar(PHPParser_Node_Scalar_DNumber $node);
	public function pprintEncapsedScalar(PHPParser_Node_Scalar_Encapsed $node);
	public function pprintFileConstScalar(PHPParser_Node_Scalar_FileConst $node);
	public function pprintFuncConstScalar(PHPParser_Node_Scalar_FuncConst $node);
	public function pprintLineConstScalar(PHPParser_Node_Scalar_LineConst $node);
	public function pprintLNumberScalar(PHPParser_Node_Scalar_LNumber $node);
	public function pprintMethodConstScalar(PHPParser_Node_Scalar_MethodConst $node);
	public function pprintNSConstScalar(PHPParser_Node_Scalar_NSConst $node);
	public function pprintStringScalar(PHPParser_Node_Scalar_String $node);
	public function pprintTraitConstScalar(PHPParser_Node_Scalar_TraitConst $node);
	public function pprintScalar(PHPParser_Node_Scalar $node);
	public function pprintBreakStmt(PHPParser_Node_Stmt_Break $node);
	public function pprintCaseStmt(PHPParser_Node_Stmt_Case $node);
	public function pprintCatchStmt(PHPParser_Node_Stmt_Catch $node);
	public function pprintClassStmt(PHPParser_Node_Stmt_Class $node);
	public function pprintClassConstStmt(PHPParser_Node_Stmt_ClassConst $node);
	public function pprintClassMethodStmt(PHPParser_Node_Stmt_ClassMethod $node);
	public function pprintConstStmt(PHPParser_Node_Stmt_Const $node);
	public function pprintContinueStmt(PHPParser_Node_Stmt_Continue $node);
	public function pprintDeclareStmt(PHPParser_Node_Stmt_Declare $node);
	public function pprintDeclareDeclareStmt(PHPParser_Node_Stmt_DeclareDeclare $node);
	public function pprintDoStmt(PHPParser_Node_Stmt_Do $node);
	public function pprintEchoStmt(PHPParser_Node_Stmt_Echo $node);
	public function pprintElseStmt(PHPParser_Node_Stmt_Else $node);
	public function pprintElseIfStmt(PHPParser_Node_Stmt_ElseIf $node);
	public function pprintExprStmt(PHPParser_Node_Stmt_Expr $node);
	public function pprintForStmt(PHPParser_Node_Stmt_For $node);
	public function pprintForeachStmt(PHPParser_Node_Stmt_Foreach $node);
	public function pprintFunctionStmt(PHPParser_Node_Stmt_Function $node);
	public function pprintGlobalStmt(PHPParser_Node_Stmt_Global $node);
	public function pprintGotoStmt(PHPParser_Node_Stmt_Goto $node);
	public function pprintHaltCompilerStmt(PHPParser_Node_Stmt_HaltCompiler $node);
	public function pprintIfStmt(PHPParser_Node_Stmt_If $node);
	public function pprintInlineHTMLStmt(PHPParser_Node_Stmt_InlineHTML $node);
	public function pprintInterfaceStmt(PHPParser_Node_Stmt_Interface $node);
	public function pprintLabelStmt(PHPParser_Node_Stmt_Label $node);
	public function pprintNamespaceStmt(PHPParser_Node_Stmt_Namespace $node);
	public function pprintPropertyStmt(PHPParser_Node_Stmt_Property $node);
	public function pprintPropertyPropertyStmt(PHPParser_Node_Stmt_PropertyProperty $node);
	public function pprintReturnStmt(PHPParser_Node_Stmt_Return $node);
	public function pprintStaticStmt(PHPParser_Node_Stmt_Static $node);
	public function pprintStaticVarStmt(PHPParser_Node_Stmt_StaticVar $node);
	public function pprintSwitchStmt(PHPParser_Node_Stmt_Switch $node);
	public function pprintThrowStmt(PHPParser_Node_Stmt_Throw $node);
	public function pprintTraitStmt(PHPParser_Node_Stmt_Trait $node);
	public function pprintTraitUseStmt(PHPParser_Node_Stmt_TraitUse $node);
	public function pprintAliasTraitUseAdaptationStmt(PHPParser_Node_Stmt_TraitUseAdaptation_Alias $node);
	public function pprintPrecedenceTraitUseAdaptationStmt(PHPParser_Node_Stmt_TraitUseAdaptation_Precedence $node);
	public function pprintTraitUseAdaptationStmt(PHPParser_Node_Stmt_TraitUseAdaptation $node);
	public function pprintTryCatchStmt(PHPParser_Node_Stmt_TryCatch $node);
	public function pprintUnsetStmt(PHPParser_Node_Stmt_Unset $node);
	public function pprintUseStmt(PHPParser_Node_Stmt_Use $node);
	public function pprintUseUseStmt(PHPParser_Node_Stmt_UseUse $node);
	public function pprintWhileStmt(PHPParser_Node_Stmt_While $node);
	public function pprintStmt(PHPParser_Node_Stmt $node);
	public function pprintExpr(PHPParser_Node_Expr $node);

}
?>